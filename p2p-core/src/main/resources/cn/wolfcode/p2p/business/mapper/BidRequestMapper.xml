<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.business.mapper.BidRequestMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.business.domain.BidRequest" >
    <id column="id" property="id" />
    <result column="version" property="version" />
    <result column="bidRequestType" property="bidRequestType" />
    <result column="bidRequestState" property="bidRequestState" />
    <result column="bidRequestAmount" property="bidRequestAmount" />
    <result column="currentRate" property="currentRate" />
    <result column="monthes2Return" property="monthes2Return" />
    <result column="bidCount" property="bidCount" />
    <result column="totalRewardAmount" property="totalRewardAmount" />
    <result column="currentSum" property="currentSum" />
    <result column="title" property="title" />
    <result column="description" property="description" />
    <result column="note" property="note" />
    <result column="disableDate" property="disableDate" />
    <result column="disableDays" property="disableDays" />
    <result column="minBidAmount" property="minBidAmount" />
    <result column="applyTime" property="applyTime" />
    <result column="publishTime" property="publishTime" />
    <!-- 借款人: -->
    <association property="createUserId" columnPrefix="ap_" resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.singleBaseMap"/>
    <!-- 投资人: -->
    <collection property="bids" column="id" select="cn.wolfcode.p2p.business.mapper.BidMapper.listByBidRequestKId"/>
  </resultMap>

  <!-- 添加一条数据 -->
  <insert id="insert" parameterType="cn.wolfcode.p2p.business.domain.BidRequest" useGeneratedKeys="true" keyProperty="id" >
    insert into bidrequest (version, bidRequestType, bidRequestState, bidRequestAmount, currentRate, 
      monthes2Return, bidCount, totalRewardAmount, currentSum, title, 
      description, note, disableDate, createUserId, disableDays, minBidAmount, 
      applyTime, publishTime)
    values (#{version}, #{bidRequestType}, #{bidRequestState}, #{bidRequestAmount}, #{currentRate},
      #{monthes2Return}, #{bidCount}, #{totalRewardAmount}, #{currentSum}, #{title},
      #{description}, #{note}, #{disableDate}, #{createUserId.id}, #{disableDays}, #{minBidAmount},
      #{applyTime}, #{publishTime})
  </insert>
  <!-- 发标审核高级查询 -->
  <select id="queryForCount" resultType="java.lang.Integer">
      select count(id)
      from bidrequest
  </select>


    <sql id="baseSql">
        <where>
            <if test="bidRequestState != -1">
                and br.bidRequestState = #{bidRequestState}
            </if>
            <if test="states != null">
                and br.bidRequestState in
              <foreach collection="states" open="(" item="state" separator="," close=")">
                  #{state}
              </foreach>
            </if>
        </where>
    </sql>
  <!-- 发标审核高级查询 -->
  <select id="queryForList" resultMap="BaseResultMap">
      select br.id,
      br.version,
      br.bidRequestType,
      br.bidRequestState,
      br.bidRequestAmount,
      br.currentRate,
      br.monthes2Return,
      br.bidCount,
      br.totalRewardAmount,
      br.currentSum,
      br.title,
      br.description,
      br.note,
      br.disableDate,
      br.disableDays,
      br.minBidAmount,
      br.applyTime,
      br.publishTime,
      ap.id ap_id,
      ap.username ap_username
      from bidrequest br join logininfo ap on br.createUserId=ap.id
     <include refid="baseSql"/>
      <if test="orderBy != null">
          ORDER BY ${orderBy} <if test="orderBy != null">${orderByType}</if>
      </if>
      limit #{beginIndex},#{pageSize}
  </select>
    <!-- 查询一条数据 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
      select br.id,
      br.version,
      br.bidRequestType,
      br.bidRequestState,
      br.bidRequestAmount,
      br.currentRate,
      br.monthes2Return,
      br.bidCount,
      br.totalRewardAmount,
      br.currentSum,
      br.title,
      br.description,
      br.note,
      br.disableDate,
      br.disableDays,
      br.minBidAmount,
      br.applyTime,
      br.publishTime,
      ap.id ap_id,
      ap.username ap_username
      from bidrequest br join logininfo ap on br.createUserId=ap.id
      where br.id = #{id}
  </select>

  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.business.domain.BidRequest" >
    update bidrequest
    set version = version + 1,
      bidRequestType = #{bidRequestType},
      bidRequestState = #{bidRequestState},
      bidRequestAmount = #{bidRequestAmount},
      currentRate = #{currentRate},
      monthes2Return = #{monthes2Return},
      bidCount = #{bidCount},
      totalRewardAmount = #{totalRewardAmount},
      currentSum = #{currentSum},
      title = #{title},
      description = #{description},
      note = #{note},
      disableDate = #{disableDate},
      createUserId = #{createUserId.id},
      disableDays = #{disableDays},
      minBidAmount = #{minBidAmount},
      applyTime = #{applyTime},
      publishTime = #{publishTime}
    where id = #{id}
  </update>
    <!--<select id="selectAll" resultMap="BaseResultMap" >
      select id, version, bidRequestType, bidRequestState, bidRequestAmount, currentRate,
      monthes2Return, bidCount, totalRewardAmount, currentSum, title, description, note,
      disableDate, createUserId, disableDays, minBidAmount, applyTime, publishTime
      from bidrequest
    </select>-->
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.business.mapper.PaymentScheduleMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.business.domain.PaymentSchedule" >
    <id column="id" property="id" />
    <result column="deadLine" property="deadLine" />
    <result column="payDate" property="payDate" />
    <result column="totalAmount" property="totalAmount" />
    <result column="principal" property="principal" />
    <result column="interest" property="interest" />
    <result column="monthIndex" property="monthIndex" />
    <result column="state" property="state" />
    <result column="bidRequestType" property="bidRequestType" />
    <result column="returnType" property="returnType" />
    <result column="bidRequestId" property="bidRequestId" />
    <result column="bidRequestTitle" property="bidRequestTitle" />
    <!-- 借款人: -->
    <result column="createUserId" property="createUserId" />
    <!-- 收款计划: -->
    <collection property="details" column="id" ofType="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail"
                select="cn.wolfcode.p2p.business.mapper.PaymentScheduleDetailMapper.listDetailByPsId"/>
  </resultMap>
  <insert id="insert" parameterType="cn.wolfcode.p2p.business.domain.PaymentSchedule" useGeneratedKeys="true" keyProperty="id" >
    insert into paymentschedule (deadLine, payDate, totalAmount, principal, interest, monthIndex, 
      state, bidRequestType, returnType, bidRequestId, createUserId, bidRequestTitle
      )
    values (#{deadLine}, #{payDate}, #{totalAmount}, #{principal}, #{interest}, #{monthIndex}, 
      #{state}, #{bidRequestType}, #{returnType}, #{bidRequestId}, #{createUserId}, #{bidRequestTitle}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.business.domain.PaymentSchedule" >
    update paymentschedule
    set deadLine = #{deadLine},
      payDate = #{payDate},
      totalAmount = #{totalAmount},
      principal = #{principal},
      interest = #{interest},
      monthIndex = #{monthIndex},
      state = #{state},
      bidRequestType = #{bidRequestType},
      returnType = #{returnType},
      bidRequestId = #{bidRequestId},
      createUserId = #{createUserId},
      bidRequestTitle = #{bidRequestTitle}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, deadLine, payDate, totalAmount, principal, interest, monthIndex, state, 
    bidRequestType, returnType, bidRequestId, createUserId, bidRequestTitle
    from paymentschedule
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, deadLine, payDate, totalAmount, principal, interest, monthIndex, state, 
    bidRequestType, returnType, bidRequestId, createUserId, bidRequestTitle
    from paymentschedule
  </select>

  <!-- sql -->
  <sql id="baseSql">
    <where>
      <if test="bidRequestId != -1">
        and bidRequestId = #{bidRequestId}
      </if>
      <if test="state != -1">
        and state = #{state}
      </if>
      <if test="beginDate != null">
        and deadLine &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        and deadLine &lt;= #{endDate}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="java.lang.Integer">
    select count(*)
    from paymentschedule
    <include refid="baseSql"/>
</select>

  <select id="queryForList" resultMap="BaseResultMap">
    select id, deadLine, payDate, totalAmount, principal, interest, monthIndex, state,
    bidRequestType, returnType, bidRequestId, createUserId, bidRequestTitle
    from paymentschedule
    <include refid="baseSql"/>
  </select>

</mapper>